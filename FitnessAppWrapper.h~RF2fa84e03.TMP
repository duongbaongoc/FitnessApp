#include "List.h"

using std::fstream;
using std::cout;
using std::cin;
using std::endl;

/****represent the whole application*****/
class FitnessAppWrapper
{
	public:
		//constructors
		FitnessAppWrapper(); // default
		FitnessAppWrapper(string diet_file_name, 
			string exercise_file_name); // parametrized

		//getters
		const List &get_diet_plan() const;
		const List &get_exercise_plan() const;
		const fstream &get_diet_file() const;
		const fstream &get_exercise_file() const;

		//setters
		void set_diet_plan(const List &diet_plan);
		void set_exercise_plan(const List &exercise_plan);
		void set_diet_file(const string &file_file_name);
		void set_exercise_file(const string &exercise_file_name);

		//other member functions
		void runApp(void); // start the main application
		//display memu, get option, execute the option
		//void loadDailyPlan(fstream &fileStream, DietPlan &plan); 
		//must define two of these functions; one for a DietPlan and one for an ExercisePlan.
		//This function reads one record from the given stream.These will be considered overloaded functions!
			//Precondition: file is already open!
		//void loadWeeklyPlan(fstream &fileStream, DietPlan weeklyPlan[]);
		//must define two of these functions; one for a DietPlan and one for an ExercisePlan.
		//This function must read in all seven daily plans from the given stream.
	//Note: the array parameter would change if using a vector or linked list!
		//This function should call loadDailyPlan() directly.Precondition : file is already open!
		//displayDailyPlan();
		//writes a daily plan to the screen.
		//You must apply the overloaded stream insertion operator here!
	//Note : you must determine the appropriate parameters and return type.Once again you must define two of these!
		//displayWeeklyPlan();
		//writes a weekly plan to the screen.This function must call displayDailyPlan().
	//Note : you must determine the appropriate parameters and return type.Once again you must define two of these!
		//storeDailyPlan();
		//writes a daily plan to a file.You must apply the overloaded stream insertion operator here!
	//Note : you must determine the appropriate parameters and return type.Once again you must define two of these!
		//storeWeeklyPlan();
		//writes a weekly plan to a file.This function must call storeDailyPlan().
		//You must apply the overloaded stream insertion operator here!
	//Note : you must determine the appropriate parameters and return type.Once again you must define two of these!
		void displayMenu(); // displays nine menu options

		//destructor
		~FitnessAppWrapper();
	private:
		List m_diet_plan;
		List m_exercise_plan;
		fstream m_diet_file;
		fstream m_exercise_file;
};

//get an option (1-9) from the option menu
void get_option(int &option);